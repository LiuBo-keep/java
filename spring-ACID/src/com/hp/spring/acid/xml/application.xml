<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--配置c3p0连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--注入属性值-->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql:///spring_acid"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!--创建dao，service对象并完成注入-->
    <bean id="ordersDao" class="com.hp.spring.acid.xml.dao.OrdersDao">
        <constructor-arg ref="jdbcTemplate"></constructor-arg>
    </bean>
    <bean id="ordersSevice" class="com.hp.spring.acid.xml.service.OrdersSevice">
        <constructor-arg ref="ordersDao"></constructor-arg>
    </bean>

    <!--创建jdbcTemplate对象-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--创建事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务增强/通知-->
    <tx:advice id="txadvice" transaction-manager="transactionManager">
        <!--指定事务规则-->
        <tx:attributes>
            <!--设置进行事务操作的方法匹配规则-->
            <!--<tx:method name="accountMoney"/>&lt;!&ndash;匹配方法名称为accountMoney的方法&ndash;&gt;-->
            <!--
            propagation:设置事务级别
            read-only:是否只读
            rollback-for:遇到什么异常才进行回滚
            timeout:请求超时时间
            -->
            <tx:method name="account*" propagation="REQUIRED" read-only="false" rollback-for="Exception.class" timeout="5" /><!--匹配方法名称为account开头的方法-->
        </tx:attributes>
    </tx:advice>

    <!--配置切面-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="accountPoint" expression="execution(* *.accountMoney(..))"></aop:pointcut>
        <!--切面-->
        <aop:advisor advice-ref="txadvice" pointcut-ref="accountPoint"/>
    </aop:config>
</beans>